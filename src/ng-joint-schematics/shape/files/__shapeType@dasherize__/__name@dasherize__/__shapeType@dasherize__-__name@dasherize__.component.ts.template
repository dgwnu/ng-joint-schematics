/*
 * Generated by: @dgwnu/ng-joint-schematics
 * Ng Joint <%= classify(shapeType) %> <%= classify(name) %> Component
 */
import { Component<% if (shapeComponentInputs !== '') { %>, Input<% } %> } from '@angular/core';

<% if (jointjsImports !== '') { %>import { <%= jointjsImports %> } from 'jointjs';<% } else { %>// no jointjs imports<% } %>

import { Generic<%= classify(shapeType) %><%= classify(implementation) %>ShapeComponent, NgJointGeneric<%= classify(shapeType) %><%= classify(implementation) %> } from '../../../<%= dasherize(shapesPath) %>/<%= dasherize(shapeType) %>/<%= dasherize(shapesPath) %>-<%= dasherize(shapeType) %>';
import { <%= classify(shapeType) %><%= classify(name) %>Service } from './<%= dasherize(shapeType) %>-<%= dasherize(name) %>.service';
import { <%= classify(shapeType) %><%= classify(name) %> } from './<%= dasherize(shapeType) %>-<%= dasherize(name) %>';

@Component({
  selector: 'ng-joint-<%= dasherize(shapeType) %>-<%= dasherize(name) %>',
  template: `
    <!-- joint.shapes.<%= dasherize(shapeType) %>.<%= classify(name) %>  -->
    `,
})
export class <%= classify(shapeType) %><%= classify(name) %>Component extends Generic<%= classify(shapeType) %><%= classify(implementation) %>ShapeComponent {
<% if (shapeComponentInputs !== '') { %><%= shapeComponentInputs %><% } else { %>// no additional inputs
<% } %>
  constructor(private <%= dasherize(name) %>Service: <%= classify(shapeType) %><%= classify(name) %>Service) {
    super(<%= dasherize(name) %>Service);
  }

  shapeInstance: <%= classify(shapeType) %><%= classify(name) %>;

}

/**
 * Ng Joint <%= classify(shapeType) %> <%= classify(name) %> <%= classify(implementation) %> Interface (use this with arrays and structural directives *ngFor, ..)
 */
export interface NgJoint<%= classify(shapeType) %><%= classify(name) %> extends NgJointGeneric<%= classify(shapeType) %><%= classify(implementation) %> {
<% if (shapeInterfaceProperties !== '') { %><%= shapeInterfaceProperties %><% } else { %>// no additional properties
<% } %>}
