/*
 * Generated by @dgwnu/ng-joint-schematics
 */
import { Component, Input } from '@angular/core';

// IF attributes LOGIC...
// import { attributes } from 'jointjs';

import { Generic<%= classify(shapeType) %>ElementShapeComponent, NgJointGeneric<%= classify(shapeType) %>Element } from '../shapes-standard';
import { <%= classify(shapeType) %><%= classify(name) %>Service } from './<%= dasherize(shapeType) %>-<%= dasherize(name) %>.service';
import { <%= classify(shapeType) %><%= classify(name) %> } from './<%= dasherize(shapeType) %>-<%= dasherize(name) %>';

@Component({
  selector: 'ng-joint-<%= dasherize(shapeType) %>-<%= dasherize(name) %>',
  template: `
    <!-- joint.shapes.<%= dasherize(shapeType) %>.%= classify(name) %>  -->
    `,
})
export class <%= classify(shapeType) %><%= classify(name) %>Component extends GenericStandardElementShapeComponent {
  // IF @Input(s) LOGIC...
  // @Input() body?: attributes.SVGRectAttributes;
  // @Input() label?: attributes.SVGTextAttributes;

  constructor(private shapeService: <%= classify(shapeType) %><%= classify(name) %>Service) {
    super(shapeService);
  }

  shapeInstance: <%= classify(shapeType) %><%= classify(name) %>;

}

/**
 * Ng Joint <%= classify(shapeType) %> <%= classify(name) %> (use this with arrays and structural directives *ngFor, ..)
 */
export interface NgJoint<%= classify(shapeType) %><%= classify(name) %> extends NgJointGeneric<%= classify(shapeType) %>Element {
  // IF @Input(s) LOGIC...
  // body?: attributes.SVGRectAttributes;
  // label?: attributes.SVGTextAttributes;
}
